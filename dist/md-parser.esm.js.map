{"version":3,"file":"md-parser.esm.js","sources":["../src/Token.ts","../src/TokenReader.ts","../src/BaseParser.ts","../src/markup/Paragraph.ts","../src/markup/Text.ts","../src/markup/BlockMarkableItem.ts","../src/markup/Strikeout.ts","../src/markup/Strong.ts","../src/markup/Emphasis.ts","../src/markup/Code.ts","../src/MdParser.ts"],"sourcesContent":["export enum Token {\n  END,\n  EMPHASIS,\n  STRONG,\n  STRIKEOUT,\n  CODE,\n  TEXT,\n}\n","import { Token } from './Token';\n\nexport class TokenReader {\n  private readonly source: string = '';\n\n  private pos: number = 0;\n\n  private curToken: Token = Token.CODE;\n\n  private curStringToken: string = '';\n\n  private tags: string[] = ['**', '__', '~~', '```'];\n\n\n  private strToToken = new Map([\n    ['**', Token.STRONG],\n    ['__', Token.EMPHASIS],\n    ['~~', Token.STRIKEOUT],\n    ['```', Token.CODE],\n  ]);\n\n  private curTag: string = '';\n\n  constructor(source: string) {\n    this.source = source;\n    this.pos = 0;\n  }\n\n  private checkTag(): boolean {\n    for (const tag of this.tags) {\n      if (this.source.startsWith(tag, this.pos)) {\n        this.curTag = tag;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private test(ch: string): boolean {\n    return this.pos < this.source.length && ch === this.source[this.pos];\n  }\n\n  public nextToken(): Token {\n    if (this.pos >= this.source.length) {\n      return Token.END;\n    }\n\n    if (this.checkTag()) {\n      this.curStringToken = this.curTag;\n      const temp = this.strToToken.get(this.curTag);\n      this.curToken = temp === undefined ? Token.CODE : temp;\n      this.pos += this.curTag.length;\n      return this.curToken;\n    }\n\n    const sb: Array<string> = new Array<string>();\n\n    while (this.pos < this.source.length && !this.checkTag()) {\n      const ch: string = this.source.charAt(this.pos++);\n      if (ch === '<') {\n        sb.push('&lt;');\n      } else if (ch === '>') {\n        sb.push('&gt;');\n      } else if (ch === '&') {\n        sb.push('&amp;');\n      } else if (ch === '\\\\' && this.pos < this.source.length && (this.test('*') || this.test('_'))) {\n        sb.push(this.source.charAt(this.pos++));\n      } else if (ch === '\\n') {\n        sb.push('<br>');\n      } else {\n        sb.push(ch);\n      }\n    }\n\n    this.curToken = Token.TEXT;\n\n    this.curStringToken = sb.join('');\n\n    return this.curToken;\n  }\n\n\n  public getStringToken(): string {\n    return this.curStringToken;\n  }\n}\n","import { TokenReader } from './TokenReader';\nimport { Token } from './Token';\n\nexport abstract class BaseParser {\n  protected tr: TokenReader;\n  protected curToken: Token;\n  protected curStringToken: string;\n\n  protected nextToken(): void {\n    this.curToken = this.tr.nextToken();\n    this.curStringToken = this.tr.getStringToken();\n  }\n\n  protected constructor() {\n    this.tr = new TokenReader('');\n    this.curToken = Token.CODE;\n    this.curStringToken = '';\n  }\n}\n","import {Markable} from './Markable';\nimport {BlockItem} from './BlockItem';\n\nexport class Paragraph implements Markable {\n  private readonly elements: Array<BlockItem>;\n\n  constructor(elements: Array<BlockItem>) {\n    this.elements = new Array<BlockItem>(...elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    st.push('<p>');\n    for (const elem of this.elements) {\n      elem.toHtml(st);\n    }\n    st.push('</p>');\n  }\n\n  toMarkdown(st: Array<string>): void {\n    for (const elem of this.elements) {\n      elem.toMarkdown(st);\n    }\n  }\n\n  toText(st: Array<string>) {\n    for (const elem of this.elements) {\n      elem.toText(st);\n    }\n  }\n\n\n}\n","import {BlockItem} from './BlockItem';\n\nexport class Text implements BlockItem {\n    private text: string;\n\n    constructor(text: string) {\n        this.text = text;\n    }\n\n    toHtml(st: Array<string>): void {\n        st.push(this.text);\n    }\n\n    toMarkdown(st: Array<string>): void {\n        st.push(this.text);\n    }\n\n    toText(st: Array<string>): void {\n        st.push(this.text);\n    }\n}\n","import {BlockItem} from './BlockItem';\n\nexport abstract class BlockMarkableItem implements BlockItem {\n  private readonly elements: Array<BlockItem>;\n\n  protected closed: boolean = true;\n\n  protected constructor(elements: Array<BlockItem>, closed: boolean) {\n    this.closed = !!closed;\n    this.elements = new Array<BlockItem>(...elements);\n  }\n\n\n  protected toMarkdownSuper(start: string, end: string, st: Array<string>): void {\n    st.push(start);\n    for (const elem of this.elements) {\n      elem.toMarkdown(st);\n    }\n    st.push(end);\n  }\n\n  protected toHtmlSuper(start: string, end: string, st: Array<string>, startOnly: string): void {\n    if (!this.closed) {\n      start = startOnly;\n      end = '';\n    }\n    st.push(start);\n    for (const elem of this.elements) {\n      elem.toHtml(st);\n    }\n    st.push(end);\n  }\n\n  public toText(st: Array<string>): void {\n    for (const elem of this.elements) {\n      elem.toText(st);\n    }\n  }\n\n  abstract toMarkdown(st: Array<string>): void;\n\n  abstract toHtml(st: Array<string>): void;\n}\n\n","import {BlockMarkableItem} from './BlockMarkableItem';\nimport {BlockItem} from './BlockItem';\n\nexport class Strikeout extends BlockMarkableItem {\n  constructor(elements: Array<BlockItem>, closed: boolean) {\n    super(elements, closed);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<s>', '</s>', st, \"~~\");\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('~~', '~~', st);\n  }\n}\n","import {BlockMarkableItem} from './BlockMarkableItem';\nimport {BlockItem} from './BlockItem';\n\nexport class Strong extends BlockMarkableItem {\n  constructor(elements: Array<BlockItem>, closed: boolean) {\n    super(elements, closed);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<strong>', '</strong>', st, \"**\");\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('**', '**', st);\n  }\n}\n","import {BlockItem} from './BlockItem';\nimport {BlockMarkableItem} from './BlockMarkableItem';\n\nexport class Emphasis extends BlockMarkableItem {\n\n  constructor(elements: Array<BlockItem>, closed: boolean) {\n    super(elements, closed);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<em>', '</em>', st, '__');\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('__', '__', st);\n  }\n}\n","import {BlockMarkableItem} from './BlockMarkableItem';\nimport {BlockItem} from './BlockItem';\n\nexport class Code extends BlockMarkableItem {\n\n  constructor(elements: Array<BlockItem>, closed: boolean) {\n    super(elements, closed);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<code>', '</code>', st, '```');\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('```', '```', st);\n  }\n}\n","import {BaseParser} from './BaseParser';\nimport {Markable} from './markup/Markable';\nimport {TokenReader} from './TokenReader';\nimport {Paragraph} from './markup/Paragraph';\nimport {Token} from './Token';\nimport {BlockItem} from './markup/BlockItem';\nimport {Text} from './markup/Text';\nimport {Strikeout} from './markup/Strikeout';\nimport {Strong} from './markup/Strong';\nimport {Emphasis} from './markup/Emphasis';\nimport {Code} from './markup/Code';\n\n\nexport class MdParser extends BaseParser {\n  private readonly source: Array<string>;\n  private curElem: string = '';\n  private curLine: string | null = '';\n\n  thrownError: boolean = false;\n\n  isHeaderRequired: boolean = false;\n  isLinkRequired: boolean = false;\n\n  constructor(data: string, isHeaderRequired?: boolean, isImageRequired?: boolean) {\n    super();\n    this.isLinkRequired = !!isImageRequired;\n    this.isHeaderRequired = !!isHeaderRequired;\n    this.source = [data.trim()];\n    console.log(\"data\", [data])\n  }\n\n  replaceHtmlSpecials(data: string): string {\n    const sb: Array<string> = [];\n    for (const ch of data) {\n      if (ch === '<') {\n        sb.push('&lt;');\n      } else if (ch === '>') {\n        sb.push('&gt;');\n      } else if (ch === '&') {\n        sb.push('&amp;');\n      } else {\n        sb.push(ch);\n      }\n    }\n    return sb.join('');\n  }\n\n  public parseToHtml(): string {\n    const res = this.parse();\n    const html: Array<string> = [];\n    for (const elem of res) {\n      elem.toHtml(html);\n    }\n    return html.join('');\n  }\n\n  public parse(): Array<Markable> {\n    const ans = new Array<Markable>();\n    while (this.nextElement()) {\n      this.tr = new TokenReader(this.curElem);\n      this.nextToken();\n      ans.push(new Paragraph(this.parseItems()));\n    }\n    console.log(\"ans:\", ans)\n    return ans;\n  }\n\n  private static isText(token: Token) {\n    return token === Token.TEXT;\n  }\n\n  private parseItems(): Array<BlockItem> {\n    const ans = new Array<BlockItem>();\n    while (this.curToken !== Token.END) {\n      if (MdParser.isText(this.curToken)) {\n        ans.push(new Text(this.curStringToken));\n        this.nextToken();\n      } else {\n        const start: Token = this.curToken;\n        this.nextToken();\n        ans.push(...this.parseItem(start));\n      }\n    }\n    return ans;\n  }\n\n  private parseItem(start: Token): Array<BlockItem> {\n    const ans = new Array<BlockItem>();\n    while (this.curToken !== Token.END && this.curToken !== start) {\n      if (MdParser.isText(this.curToken)) {\n        ans.push(new Text(this.curStringToken));\n        this.nextToken();\n      } else {\n        const st: Token = this.curToken;\n        this.nextToken();\n        ans.push(...this.parseItem(st));\n      }\n    }\n    if (this.curToken === start) {\n      this.nextToken();\n      return this.create(ans, start, true);\n    } else {\n      this.nextToken();\n      return this.create(ans, start, false);\n    }\n  }\n\n  private create(ans: Array<BlockItem>, token: Token, closed: boolean): Array<BlockItem> {\n    switch (token) {\n      case Token.STRIKEOUT: {\n        return [new Strikeout(ans, closed)];\n      }\n      case Token.STRONG: {\n        return [new Strong(ans, closed)];\n      }\n      case Token.EMPHASIS: {\n        return [new Emphasis(ans, closed)];\n      }\n      case Token.CODE: {\n        return [new Code(ans, closed)];\n      }\n      default: {\n        this.thrownError = true;\n        return [new Code(ans, closed)];\n      }\n    }\n  }\n\n  private skipEmpties(): void {\n    this.curLine = this.next();\n    while (this.curLine !== null && this.curLine === '') {\n      this.curLine = this.next();\n    }\n  }\n\n  private nextElement(): boolean {\n    this.skipEmpties();\n    if (this.curLine === null) {\n      return false;\n    }\n    const elem = new Array<string>();\n    elem.push(this.curLine);\n    this.curLine = this.next();\n    while (this.curLine !== null && this.curLine !== '') {\n      elem.push('\\n');\n      elem.push(this.curLine);\n      this.curLine = this.next();\n    }\n    console.log(elem);\n    this.curElem = elem.join('');\n    return true;\n  }\n\n  next(): string | null {\n    const exp = this.source.length === 0 ? null : this.source.shift();\n    if (exp !== undefined) {\n      return exp;\n    }\n    return null;\n  }\n}\n"],"names":["Token","TokenReader","source","CODE","Map","STRONG","EMPHASIS","STRIKEOUT","pos","checkTag","tags","tag","startsWith","curTag","test","ch","length","nextToken","END","curStringToken","temp","strToToken","get","curToken","undefined","sb","Array","charAt","push","TEXT","join","getStringToken","BaseParser","tr","Paragraph","elements","toHtml","st","elem","toMarkdown","toText","Text","text","BlockMarkableItem","closed","toMarkdownSuper","start","end","toHtmlSuper","startOnly","Strikeout","Strong","Emphasis","Code","MdParser","data","isHeaderRequired","isImageRequired","isLinkRequired","trim","console","log","replaceHtmlSpecials","parseToHtml","res","parse","html","ans","nextElement","curElem","parseItems","isText","token","parseItem","create","thrownError","skipEmpties","curLine","next","exp","shift"],"mappings":"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"}