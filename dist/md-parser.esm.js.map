{"version":3,"file":"md-parser.esm.js","sources":["../src/Token.ts","../src/markup/Image.ts","../src/TokenReader.ts","../src/BaseParser.ts","../src/markup/Paragraph.ts","../src/markup/Header.ts","../src/markup/Text.ts","../src/markup/BlockMarkableItem.ts","../src/markup/Strikeout.ts","../src/markup/Strong.ts","../src/markup/Emphasis.ts","../src/markup/Code.ts","../src/MdParser.ts"],"sourcesContent":["export enum Token {\n  END,\n  EMPHASIS,\n  STRONG,\n  STRIKEOUT,\n  CODE,\n  TEXT,\n  _EMPHASIS,\n  __STRONG,\n  IMG\n}\n","import {BlockItem} from './BlockItem';\n\nexport class Image implements BlockItem {\n  private readonly name: string;\n  private readonly src: string;\n\n  constructor(name: string, src: string) {\n    this.name = name;\n    this.src = src;\n  }\n\n  toHtml(st: Array<string>): void {\n    st.push('<img alt=\\'');\n    st.push(this.name);\n    st.push('\\' src=\\'');\n    st.push(this.src);\n    st.push('\\'>');\n  }\n\n  toMarkdown(st: Array<string>): void {\n    throw st;\n  }\n\n\n}\n","import { Token } from './Token';\nimport { Image } from './markup/Image';\n\nexport class TokenReader {\n  private readonly source: string = '';\n\n  private pos: number = 0;\n\n  private curToken: Token = Token.CODE;\n\n  private curStringToken: string = '';\n\n  private tags: string[] = ['**', '__', '--', '*', '_', '`', '!['];\n\n  private imgName: string = '';\n\n  private imgSrc: string = '';\n\n  private strToToken = new Map([\n    ['**', Token.STRONG],\n    ['*', Token.EMPHASIS],\n    ['--', Token.STRIKEOUT],\n    ['`', Token.CODE],\n    ['_', Token._EMPHASIS],\n    ['__', Token.__STRONG],\n    ['![', Token.IMG],\n  ]);\n\n  private curTag: string = '';\n\n  constructor(source: string) {\n    this.source = source;\n    this.pos = 0;\n  }\n\n  private checkTag(): boolean {\n    for (const tag of this.tags) {\n      if (this.source.startsWith(tag, this.pos)) {\n        this.curTag = tag;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private test(ch: string): boolean {\n    return this.pos < this.source.length && ch === this.source[this.pos];\n  }\n\n  private parseImg(): void {\n    const start: number = this.pos;\n    let mid: number;\n    let end: number;\n    while (this.pos < this.source.length &&\n          !this.source.startsWith('](', this.pos)) {\n      this.pos++;\n    }\n    if (this.pos < this.source.length && this.source.startsWith('](', this.pos)) {\n      mid = this.pos;\n      while (this.pos < this.source.length && !this.source.startsWith(')', this.pos)) {\n        this.pos++;\n      }\n      if (this.pos < this.source.length && this.source.startsWith(')', this.pos)) {\n        end = this.pos;\n        this.imgName = this.source.substring(start, mid);\n        this.imgSrc = this.source.substring(mid + 2, end);\n        this.pos++;\n        return;\n      }\n    }\n    throw 'atata';\n  }\n\n  public getImg(): Image {\n    return new Image(this.imgName, this.imgSrc);\n  }\n\n  public nextToken(): Token {\n    if (this.pos >= this.source.length) {\n      return Token.END;\n    }\n\n    if (this.checkTag()) {\n      this.curStringToken = this.curTag;\n      const temp = this.strToToken.get(this.curTag);\n      this.curToken = temp === undefined ? Token.CODE : temp;\n      this.pos += this.curTag.length;\n      if (this.curToken === Token.IMG) {\n        this.parseImg();\n      }\n      return this.curToken;\n    }\n\n    const sb: Array<string> = new Array<string>();\n\n    while (this.pos < this.source.length && !this.checkTag()) {\n      const ch: string = this.source.charAt(this.pos++);\n      if (ch === '<') {\n        sb.push('&lt;');\n      } else if (ch === '>') {\n        sb.push('&gt;');\n      } else if (ch === '&') {\n        sb.push('&amp;');\n      } else if (ch === '\\\\' && this.pos < this.source.length && (this.test('*') || this.test('_'))) {\n        sb.push(this.source.charAt(this.pos++));\n      } else {\n        sb.push(ch);\n      }\n    }\n\n    this.curToken = Token.TEXT;\n\n    this.curStringToken = sb.join('');\n\n    return this.curToken;\n  }\n\n\n  public getStringToken(): string {\n    return this.curStringToken;\n  }\n}\n","import { TokenReader } from './TokenReader';\nimport { Token } from './Token';\n\nexport abstract class BaseParser {\n  protected tr: TokenReader;\n  protected curToken: Token;\n  protected curStringToken: string;\n\n  protected nextToken(): void {\n    this.curToken = this.tr.nextToken();\n    this.curStringToken = this.tr.getStringToken();\n  }\n\n  protected constructor() {\n    this.tr = new TokenReader('');\n    this.curToken = Token.CODE;\n    this.curStringToken = '';\n  }\n}\n","import {Markable} from './Markable';\nimport {BlockItem} from './BlockItem';\n\nexport class Paragraph implements Markable {\n  private readonly elements: Array<BlockItem>;\n\n  constructor(elements: Array<BlockItem>) {\n    this.elements = new Array<BlockItem>(...elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    st.push('<p>');\n    for (const elem of this.elements) {\n      elem.toHtml(st);\n    }\n    st.push('</p>');\n  }\n\n  toMarkdown(st: Array<string>): void {\n    for (const elem of this.elements) {\n      elem.toMarkdown(st);\n    }\n  }\n\n\n}\n","import {Markable} from './Markable';\nimport {BlockItem} from './BlockItem';\n\nexport class Header implements Markable {\n\n  private elements: Array<BlockItem>;\n  private hLevel: number;\n\n  constructor(elements: Array<BlockItem>, hLevel: number) {\n    this.hLevel = hLevel;\n    this.elements = new Array<BlockItem>(...elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    st.push(`<h${this.hLevel}>`);\n    for (const elem of this.elements) {\n      elem.toHtml(st);\n    }\n    st.push(`</h${this.hLevel}>`);\n  }\n\n  toMarkdown(st: Array<string>): void {\n    throw st;\n  }\n\n}\n","import {BlockItem} from './BlockItem';\n\nexport class Text implements BlockItem {\n  private text: string;\n\n  constructor(text: string) {\n    this.text = text;\n  }\n\n  toHtml(st: Array<string>): void {\n    st.push(this.text);\n  }\n\n  toMarkdown(st: Array<string>): void {\n    st.push(this.text);\n  }\n\n\n}\n","import {BlockItem} from './BlockItem';\n\nexport abstract class BlockMarkableItem implements BlockItem {\n  private elements: Array<BlockItem>;\n\n  protected constructor(elements: Array<BlockItem>) {\n    this.elements = new Array<BlockItem>(...elements);\n  }\n\n  protected toMarkdownSuper(start: string, end: string, st: Array<string>): void {\n    st.push(start);\n    for (const elem of this.elements) {\n      elem.toMarkdown(st);\n    }\n    st.push(end);\n  }\n\n  protected toHtmlSuper(start: string, end: string, st: Array<string>): void {\n    st.push(start);\n    for (const elem of this.elements) {\n      elem.toMarkdown(st);\n    }\n    st.push(end);\n  }\n\n  abstract toMarkdown(st: Array<string>): void;\n\n  abstract toHtml(st: Array<string>): void;\n}\n","import {BlockMarkableItem} from './BlockMarkableItem';\nimport {BlockItem} from './BlockItem';\n\nexport class Strikeout extends BlockMarkableItem {\n  constructor(elements: Array<BlockItem>) {\n    super(elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<s>', '</s>', st);\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('~', '~', st);\n  }\n}\n","import {BlockMarkableItem} from './BlockMarkableItem';\nimport {BlockItem} from './BlockItem';\n\nexport class Strong extends BlockMarkableItem {\n  constructor(elements: Array<BlockItem>) {\n    super(elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<strong>', '</strong>', st);\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('__', '__', st);\n  }\n}\n","import {BlockItem} from './BlockItem';\nimport {BlockMarkableItem} from './BlockMarkableItem';\n\nexport class Emphasis extends BlockMarkableItem {\n\n  constructor(elements: Array<BlockItem>) {\n    super(elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('<em>', '</em>', st);\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('*', '*', st);\n  }\n}\n","import {BlockMarkableItem} from './BlockMarkableItem';\nimport {BlockItem} from './BlockItem';\n\nexport class Code extends BlockMarkableItem {\n\n  constructor(elements: Array<BlockItem>) {\n    super(elements);\n  }\n\n  toHtml(st: Array<string>): void {\n    super.toHtmlSuper('`', '`', st);\n  }\n\n  toMarkdown(st: Array<string>): void {\n    super.toMarkdownSuper('<code>', '</code>', st);\n  }\n}\n","import { BaseParser } from './BaseParser';\nimport { Markable } from './markup/Markable';\nimport { TokenReader } from './TokenReader';\nimport { Paragraph } from './markup/Paragraph';\nimport { Header } from './markup/Header';\nimport { Token } from './Token';\nimport { BlockItem } from './markup/BlockItem';\nimport { Text } from './markup/Text';\nimport { Strikeout } from './markup/Strikeout';\nimport { Strong } from './markup/Strong';\nimport { Emphasis } from './markup/Emphasis';\nimport { Code } from './markup/Code';\n\n\nexport class MdParser extends BaseParser {\n  private readonly source: Array<string>;\n  private curElem: string = '';\n  private curLine: string | null = '';\n  private headerStarts = ['###### ', '##### ', '#### ', '### ', '## ', '# '];\n\n  private hLevel: number = 0;\n\n  isHeaderRequired: boolean = false;\n\n  constructor(data: string, config?: any) {\n    super();\n    this.isHeaderRequired = config.isHeaderRequired || false;\n    this.source = data.split('\\n');\n  }\n\n\n  public parse(): Array<Markable> {\n    const ans = new Array<Markable>();\n    while (this.nextElement()) {\n      if (this.isParagraph()) {\n        this.tr = new TokenReader(this.curElem);\n        this.nextToken();\n        ans.push(new Paragraph(this.parseItems()));\n      } else {\n        this.tr = new TokenReader(this.curElem.substring(this.hLevel + 1));\n        this.nextToken();\n        ans.push(new Header(this.parseItems(), this.hLevel));\n      }\n    }\n    return ans;\n  }\n\n  private isText(token: Token) {\n    return token === Token.TEXT;\n  }\n\n  private parseItems(): Array<BlockItem> {\n    const ans = new Array<BlockItem>();\n    while (this.curToken !== Token.END) {\n      if (this.isText(this.curToken)) {\n        ans.push(new Text(this.curStringToken));\n        this.nextToken();\n      } else if (this.curToken === Token.IMG) {\n        ans.push(this.tr.getImg());\n        this.nextToken();\n      } else {\n        const start: Token = this.curToken;\n        this.nextToken();\n        ans.push(...this.parseItem(start));\n      }\n    }\n    return ans;\n  }\n\n  private parseItem(start: Token): Array<BlockItem> {\n    const ans = new Array<BlockItem>();\n    while (this.curToken !== Token.END && this.curToken !== start) {\n      if (this.isText(this.curToken)) {\n        ans.push(new Text(this.curStringToken));\n        this.nextToken();\n      } else if (this.curToken === Token.IMG) {\n        ans.push(this.tr.getImg());\n        this.nextToken();\n      } else {\n        const st: Token = this.curToken;\n        this.nextToken();\n        ans.push(...this.parseItem(st));\n      }\n    }\n    if (this.curToken === start) {\n      this.nextToken();\n      return this.create(ans, start);\n    } else if (start === Token.EMPHASIS || start === Token._EMPHASIS) {\n      const temp = new Array<BlockItem>();\n      temp.push(new Text(this.tokenToString(start)));\n      temp.push(...ans);\n      this.nextToken();\n      return temp;\n    } else {\n      throw 'Unclosed tag! expected ' + start + 'found ' + this.curToken;\n    }\n  }\n\n  private tokenToString(token: Token): string {\n    switch (token) {\n      case Token.STRIKEOUT: {\n        return '--';\n      }\n      case Token.STRONG: {\n        return '**';\n      }\n      case Token.__STRONG: {\n        return '__';\n      }\n      case Token.EMPHASIS: {\n        return '*';\n      }\n      case Token._EMPHASIS: {\n        return '_';\n      }\n      case Token.CODE: {\n        return '`';\n      }\n      default: {\n        throw 'atata';\n      }\n    }\n  }\n\n  private create(ans: Array<BlockItem>, token: Token): Array<BlockItem> {\n    switch (token) {\n      case Token.STRIKEOUT: {\n        return [new Strikeout(ans)];\n      }\n      case Token.STRONG: {\n        return [new Strong(ans)];\n      }\n      case Token.__STRONG: {\n        return [new Strong(ans)];\n      }\n      case Token.EMPHASIS: {\n        return [new Emphasis(ans)];\n      }\n      case Token._EMPHASIS: {\n        return [new Emphasis(ans)];\n      }\n      case Token.CODE: {\n        return [new Code(ans)];\n      }\n      default: {\n        throw 'atata';\n      }\n    }\n  }\n\n  private skipEmpties(): void {\n    this.curLine = this.next();\n    while (this.curLine !== null && this.curLine === '') {\n      this.curLine = this.next();\n    }\n  }\n\n  private nextElement(): boolean {\n    this.skipEmpties();\n    if (this.curLine === null) {\n      return false;\n    }\n    const elem = new Array<string>();\n    elem.push(this.curLine);\n    this.curLine = this.next();\n    while (this.curLine !== null && this.curLine !== '') {\n      elem.push('\\n');\n      elem.push(this.curLine);\n      this.curLine = this.next();\n    }\n    this.curElem = elem.join('');\n    return true;\n  }\n\n  next(): string | null {\n    const exp = this.source.length === 0 ? null : this.source.shift();\n    if (exp !== undefined) {\n      return exp;\n    }\n    return null;\n  }\n\n  private isParagraph(): boolean {\n    if (this.isHeaderRequired) {\n      for (const headerStart of this.headerStarts) {\n        if (this.curElem.startsWith(headerStart)) {\n          this.hLevel = headerStart.length - 1;\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n}\n"],"names":["Token","Image","name","src","toHtml","st","push","toMarkdown","TokenReader","source","CODE","Map","STRONG","EMPHASIS","STRIKEOUT","_EMPHASIS","__STRONG","IMG","pos","checkTag","tags","tag","startsWith","curTag","test","ch","length","parseImg","start","mid","end","imgName","substring","imgSrc","getImg","nextToken","END","curStringToken","temp","strToToken","get","curToken","undefined","sb","Array","charAt","TEXT","join","getStringToken","BaseParser","tr","Paragraph","elements","elem","Header","hLevel","Text","text","BlockMarkableItem","toMarkdownSuper","toHtmlSuper","Strikeout","Strong","Emphasis","Code","MdParser","data","config","isHeaderRequired","split","parse","ans","nextElement","isParagraph","curElem","parseItems","isText","token","parseItem","create","tokenToString","skipEmpties","curLine","next","exp","shift","headerStarts","headerStart"],"mappings":"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"}